/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | LWR | GUI | SPC |   | ENT | ALT  | RSE |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                   &mo 2 &kp LGUI &kp SPACE   &kp RET &kp RALT &mo 1
                        >;
                };
                lower_layer {
// With Shift I got Symbols with the numbers
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8   |   9   |  0  | DEL  |
// |      |     |     |     |     |     |   |     |      |  UP  |       |     |      |
// | SHFT |     |     |     |     |     |   |     | LEFT | DOWN | RIGHT |     | SHFT |
//                    |     | GUI | SPC |   | ENT | ALT  |      |
                        bindings = <
   &kp ESC    &kp N1   &kp N2   &kp N3     &kp N4   &kp N5     &kp N6   &kp N7   &kp N8 &kp N9   &kp N0  &kp DEL
   &trans     &trans   &trans   &trans     &trans   &trans     &trans   &trans   &trans &trans   &trans  &trans
   &kp LSHFT  &trans   &trans   &trans     &trans   &trans     &trans   &trans   &trans &trans   &trans  &kp RSHFT
                                &trans     &kp LGUI &kp SPACE  &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// With Shift I got the symbols _, +, {, }, |, ~
// -----------------------------------------------------------------------------------------
// |  ESC |     |     |     |     |     |   |     |     |     |  -  |  =  | DEL   |
// | CTRL |     |     |     |     |     |   |     |     |  [  |  ]  |  \  |  `    |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |  SHFT |
//                    |     | GUI | SPC |   | ENT | ALT |     |
                        bindings = <
   &kp  ESC  &trans   &trans &trans   &trans   &trans     &trans    &trans    &trans   &kp MINUS   &kp EQUAL   &kp DEL
   &kp LCTRL &trans   &trans &trans   &trans   &trans     &trans    &trans    &kp LBKT &kp RBKT    &kp BSLH    &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans     &trans    &trans    &trans   &trans      &trans      &kp RSHFT
                             &trans   &kp LGUI &kp SPACE  &kp RET   &kp RALT  &trans
                        >;
                };

              controls_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | BT_CLR |     |         |     | BT_PRV  |   | BT_NXT  |      |       |       |  BKSP |
// | CTRL | LFT    | PRV |  Play/P | NXT |         |   |         |      |       |       |       |
// | SHFT | MUTE   | VOL-| VOL+    |     |         |   |         |      |       |       |  SHFT |
//                       |         | GUI | SPC     |   | ENT     | ALT  |       |
                        bindings = <
   &kp  TAB  &bt BT_CLR &trans        &trans       &trans      &bt BT_PRV     &bt BT_NXT    &trans    &trans   &trans   &trans   &kp BSPC
   &kp LCTRL &kp LEFT   &kp C_PREV    &kp C_PP     &kp C_NEXT  &trans         &trans        &trans    &trans   &trans   &trans   &trans
   &kp LSHFT &kp C_MUTE &kp C_VOL_DN  &kp C_VOL_UP &trans      &trans         &trans        &trans    &trans   &trans   &trans   &kp RSHFT
                                      &trans       &kp LGUI    &kp SPACE      &kp RET       &kp RALT  &trans
                        >;
              };
        };
};
